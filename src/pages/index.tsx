import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { Header } from "@/components";
import { Button, Heading, TextField } from "@/components/ui";
import { useForm } from "react-hook-form";
import { z } from "zod";
import { DevTool } from "@hookform/devtools";
import { zodResolver } from "@hookform/resolvers/zod";
import { ChevronRight } from "lucide-react";

interface FormFieldsType {
  email: string;
}

const schema = z.object({
  email: z.string().nonempty("This field is required").email(),
});

const Home: NextPage = () => {
  async function onSubmit(data: FormFieldsType) {
    await new Promise((resolve) => setTimeout(resolve, 2000));
    console.log(data);
  }
  const {
    register,
    control,
    formState: { errors, touchedFields, isSubmitted, isSubmitting },
    handleSubmit,
  } = useForm<FormFieldsType>({
    mode: "onChange",
    resolver: zodResolver(schema),
    defaultValues: {
      email: "",
    },
  });
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/images/favicon.ico" />
      </Head>
      <main>
        <section className="relative h-[32rem] border-b-8 border-zinc-800 lg:h-[45rem] xl:h-[45rem]">
          <div className="p relative z-10 h-full bg-black/50 bg-gradient-to-b from-black/70 via-transparent to-black/60">
            <Header className="absolute inset-x-0 top-0 z-50" />
            <div className="container flex h-full flex-col items-center justify-end pb-8 md:pb-16 lg:justify-center lg:gap-4 lg:pt-24 lg:pb-0">
              <Heading size="large" className="mb-2 text-[2rem] leading-tight md:text-[2rem] lg:mb-0">
                Unlimited movies, TV shows, and more.
              </Heading>
              <p className="mb-4 text-center text-lg lg:mb-2 lg:text-2xl">Watch anywhere. Cancel anytime.</p>
              <p className="mb-3 px-4 text-center text-lg lg:mb-0 lg:text-xl">
                Ready to watch? Enter your email to create or restart your membership.
              </p>
              {/* eslint-disable-next-line @typescript-eslint/no-misused-promises */}
              <form
                className="flex flex-col items-center gap-4 md:flex-row md:items-start"
                onSubmit={handleSubmit(onSubmit)}
                noValidate
              >
                <TextField
                  className="min-w-[70vw] md:min-w-[50vw] lg:min-w-[30vw] xl:min-w-[20vw]"
                  placeholder="Email address"
                  hasError={!!((touchedFields.email || isSubmitted) && errors.email)}
                  error={errors.email?.message}
                  {...register("email")}
                />
                <Button isLoading={isSubmitting} variant="primary" size="large" type="submit" className="px-4 md:px-6">
                  <span>Get Started</span>
                  <ChevronRight className="ml-2 h-4 w-4" />
                </Button>
              </form>
            </div>
          </div>

          <Image
            src="/images/hero.jpg"
            alt="Hero image"
            fill
            priority
            className="pointer-events-none absolute inset-0 select-none object-cover object-center"
          />
        </section>
        <section className="border-b-8 border-zinc-800 py-12">
          <div className="container flex flex-col lg:flex-row">
            <div className="flex flex-1 flex-col justify-center gap-4">
              <Heading size="large">Enjoy on your TV.</Heading>
              <p className="text-center text-lg lg:text-left lg:text-2xl">
                Watch on Smart TVs, Playstation, Xbox, Chromecast, Apple TV, Blu-ray players, and more.
              </p>
            </div>
            <div className="flex flex-1 justify-center lg:block">
              <div className="relative aspect-[16/9]">
                <video
                  autoPlay
                  muted
                  className="lg:w-88 absolute left-11 top-[3.3rem] w-[15.5rem] md:top-[4.8rem] md:left-[4.2rem] md:w-96 lg:left-16 lg:top-[4.5rem] xl:top-20 xl:left-[4.5rem] xl:w-[26rem] 2xl:top-[6.5rem] 2xl:left-[5.5rem] 2xl:w-[32rem]"
                >
                  <source src="/videos/tv.m4v" type="video/mp4" />
                </video>
                <Image
                  src="/images/tv.png"
                  alt="TV"
                  width={1080}
                  height={720}
                  className="pointer-events-none relative h-64 w-auto select-none md:h-96 lg:h-auto lg:w-full"
                />
              </div>
            </div>
          </div>
        </section>
      </main>
      <DevTool control={control} /> {/* set up the dev tool */}
    </>
  );
};

export default Home;
